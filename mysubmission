## These functions were written to complete Coursera Data Science: R Programming week 3 assignment

 ## Week 3 Assignment; 2020; GitHub user: Ganesh

 ## Write a short comment describing this function

 ## This function will create a special "matrix" object which will cache it's inverse.
 ## I simply set the input x as a matrix
 ## and then set the solved value "s" as a null
 ## then I changed every reference to "mean" to "solve"
 makeCacheMatrix <- function(x = matrix(sample(1:100,9),3,3)) {
   s <- NULL
   set <- function(y) {
     x <<- y
     s <<- NULL
   }
   get <- function() x
   setsolve <- function(solve) s <<- solve
   getsolve <- function() s
   list(set = set, get = get,
        setsolve = setsolve,
        getsolve = getsolve)
 }
 ##
 ## Same here, changed "mean" to "solve" and "m" to "s"
 cacheSolve <- function(x, ...) {
   s <- x$getsolve()
   if(!is.null(s)) {
     message("getting inversed matrix")
     return(s)
   }
   data <- x$get()
   s <- solve(data, ...)
   x$setsolve(s)
   s
 }
